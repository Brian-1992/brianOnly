//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:4.0.30319.42000
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace BDS008.WebSvc {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WebSvc.IFileService")]
    public interface IFileService {
        
        // CODEGEN: 作業 UploadFile 未由 RPC 或文件所包裝，正在產生訊息合約。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileService/UploadFile", ReplyAction="http://tempuri.org/IFileService/UploadFileResponse")]
        BDS008.WebSvc.UploadFileResponse UploadFile(BDS008.WebSvc.RemoteFileInfo request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileService/UploadFile", ReplyAction="http://tempuri.org/IFileService/UploadFileResponse")]
        System.Threading.Tasks.Task<BDS008.WebSvc.UploadFileResponse> UploadFileAsync(BDS008.WebSvc.RemoteFileInfo request);
        
        // CODEGEN: 訊息 DownloadRequest 的包裝函式名稱 (DownloadRequest) 與預設值 (DownloadFile) 不符，正在產生訊息合約
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileService/DownloadFile", ReplyAction="http://tempuri.org/IFileService/DownloadFileResponse")]
        BDS008.WebSvc.RemoteFileInfo DownloadFile(BDS008.WebSvc.DownloadRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileService/DownloadFile", ReplyAction="http://tempuri.org/IFileService/DownloadFileResponse")]
        System.Threading.Tasks.Task<BDS008.WebSvc.RemoteFileInfo> DownloadFileAsync(BDS008.WebSvc.DownloadRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileService/DeleteFile", ReplyAction="http://tempuri.org/IFileService/DeleteFileResponse")]
        int DeleteFile(string file_guid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileService/DeleteFile", ReplyAction="http://tempuri.org/IFileService/DeleteFileResponse")]
        System.Threading.Tasks.Task<int> DeleteFileAsync(string file_guid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileService/TestService", ReplyAction="http://tempuri.org/IFileService/TestServiceResponse")]
        string TestService(string input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileService/TestService", ReplyAction="http://tempuri.org/IFileService/TestServiceResponse")]
        System.Threading.Tasks.Task<string> TestServiceAsync(string input);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RemoteFileInfo", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class RemoteFileInfo {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string FileName;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public long Length;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.IO.Stream FileByteStream;
        
        public RemoteFileInfo() {
        }
        
        public RemoteFileInfo(string FileName, long Length, System.IO.Stream FileByteStream) {
            this.FileName = FileName;
            this.Length = Length;
            this.FileByteStream = FileByteStream;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UploadFileResponse {
        
        public UploadFileResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DownloadRequest", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DownloadRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string FileName;
        
        public DownloadRequest() {
        }
        
        public DownloadRequest(string FileName) {
            this.FileName = FileName;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFileServiceChannel : BDS008.WebSvc.IFileService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FileServiceClient : System.ServiceModel.ClientBase<BDS008.WebSvc.IFileService>, BDS008.WebSvc.IFileService {
        
        public FileServiceClient() {
        }
        
        public FileServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FileServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FileServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FileServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BDS008.WebSvc.UploadFileResponse BDS008.WebSvc.IFileService.UploadFile(BDS008.WebSvc.RemoteFileInfo request) {
            return base.Channel.UploadFile(request);
        }
        
        public void UploadFile(string FileName, long Length, System.IO.Stream FileByteStream) {
            BDS008.WebSvc.RemoteFileInfo inValue = new BDS008.WebSvc.RemoteFileInfo();
            inValue.FileName = FileName;
            inValue.Length = Length;
            inValue.FileByteStream = FileByteStream;
            BDS008.WebSvc.UploadFileResponse retVal = ((BDS008.WebSvc.IFileService)(this)).UploadFile(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<BDS008.WebSvc.UploadFileResponse> BDS008.WebSvc.IFileService.UploadFileAsync(BDS008.WebSvc.RemoteFileInfo request) {
            return base.Channel.UploadFileAsync(request);
        }
        
        public System.Threading.Tasks.Task<BDS008.WebSvc.UploadFileResponse> UploadFileAsync(string FileName, long Length, System.IO.Stream FileByteStream) {
            BDS008.WebSvc.RemoteFileInfo inValue = new BDS008.WebSvc.RemoteFileInfo();
            inValue.FileName = FileName;
            inValue.Length = Length;
            inValue.FileByteStream = FileByteStream;
            return ((BDS008.WebSvc.IFileService)(this)).UploadFileAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BDS008.WebSvc.RemoteFileInfo BDS008.WebSvc.IFileService.DownloadFile(BDS008.WebSvc.DownloadRequest request) {
            return base.Channel.DownloadFile(request);
        }
        
        public long DownloadFile(ref string FileName, out System.IO.Stream FileByteStream) {
            BDS008.WebSvc.DownloadRequest inValue = new BDS008.WebSvc.DownloadRequest();
            inValue.FileName = FileName;
            BDS008.WebSvc.RemoteFileInfo retVal = ((BDS008.WebSvc.IFileService)(this)).DownloadFile(inValue);
            FileName = retVal.FileName;
            FileByteStream = retVal.FileByteStream;
            return retVal.Length;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<BDS008.WebSvc.RemoteFileInfo> BDS008.WebSvc.IFileService.DownloadFileAsync(BDS008.WebSvc.DownloadRequest request) {
            return base.Channel.DownloadFileAsync(request);
        }
        
        public System.Threading.Tasks.Task<BDS008.WebSvc.RemoteFileInfo> DownloadFileAsync(string FileName) {
            BDS008.WebSvc.DownloadRequest inValue = new BDS008.WebSvc.DownloadRequest();
            inValue.FileName = FileName;
            return ((BDS008.WebSvc.IFileService)(this)).DownloadFileAsync(inValue);
        }
        
        public int DeleteFile(string file_guid) {
            return base.Channel.DeleteFile(file_guid);
        }
        
        public System.Threading.Tasks.Task<int> DeleteFileAsync(string file_guid) {
            return base.Channel.DeleteFileAsync(file_guid);
        }
        
        public string TestService(string input) {
            return base.Channel.TestService(input);
        }
        
        public System.Threading.Tasks.Task<string> TestServiceAsync(string input) {
            return base.Channel.TestServiceAsync(input);
        }
    }
}
